// <auto-generated />
using System;
using Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Persistencia.Migraciones
{
    [DbContext(typeof(aplicationDbContext))]
    partial class aplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aplicacion.Dominio.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Publicationsid")
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Publicationsid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Publications", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Storeid")
                        .HasColumnType("char(36)");

                    b.Property<bool>("visibility")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("Storeid");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Seller", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CUIT")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Storeid")
                        .HasColumnType("char(36)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.HasIndex("Storeid");

                    b.ToTable("Seller");

                    b.HasData(
                        new
                        {
                            id = new Guid("2f529190-238b-43f4-9928-18cc8dd57b44"),
                            CUIT = 20463633836L,
                            direction = "Av San Juan",
                            lastname = "Salinas",
                            name = "Franco"
                        },
                        new
                        {
                            id = new Guid("a8f762ea-a349-4677-b21f-cd21f73c5224"),
                            CUIT = 22993949399L,
                            direction = "Lanus",
                            lastname = "Mansilla",
                            name = "Facundo"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Store", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            id = new Guid("8527b142-8d9a-40a9-a2ce-633726642647"),
                            name = "Nike"
                        },
                        new
                        {
                            id = new Guid("e327f64b-3d6a-4755-b1ba-0cb698185211"),
                            name = "Adidas"
                        },
                        new
                        {
                            id = new Guid("b6c53cad-dded-4ea2-ac9c-e68950512ab5"),
                            name = "Puma"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Sellerid")
                        .HasColumnType("char(36)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Sellerid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Categories", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Product", null)
                        .WithMany("Category")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Product", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Publications", null)
                        .WithMany("products")
                        .HasForeignKey("Publicationsid");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Publications", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Store", null)
                        .WithMany("publications")
                        .HasForeignKey("Storeid");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Seller", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Store", null)
                        .WithMany("sellers")
                        .HasForeignKey("Storeid");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Users", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Seller", null)
                        .WithMany("user")
                        .HasForeignKey("Sellerid");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Product", b =>
                {
                    b.Navigation("Category");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Publications", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Seller", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Store", b =>
                {
                    b.Navigation("publications");

                    b.Navigation("sellers");
                });
#pragma warning restore 612, 618
        }
    }
}
